{"version":3,"file":"static/js/297.14996ce5.chunk.js","mappings":"qLACA,EAAyB,uB,UCgBzB,EAde,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,SACZC,YAAY,IACZC,kBAAkB,MAClBC,MAAM,KACNC,SAAS,KAIhB,C,mICdD,GAAgB,UAAY,mCAAmC,aAAe,sCAAsC,YAAc,qCAAqC,gBAAkB,yCAAyC,cAAgB,wC,2DCM5OC,EAAe,CACjBC,MAAO,GACPC,MAAO,GACPC,KAAM,IAsGV,EAnGwB,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,GAA8BC,EAAAA,EAAAA,WAAS,UAAIT,IAA3C,eAAOU,EAAP,KAAgBC,EAAhB,KACQV,EAAsBS,EAAtBT,MAAOC,EAAeQ,EAAfR,MAAOC,EAAQO,EAARP,KAqBhBS,GAAsBC,EAAAA,EAAAA,cAAY,YAAiB,IAAdC,EAAa,EAAbA,OAChCX,EAAgBW,EAAhBX,KAAMY,EAAUD,EAAVC,MAETJ,EADQ,UAATR,EACY,SAAAa,GACP,OAAO,kBAAIA,GAAX,IAAsBd,MAAOY,EAAOG,MAAM,IAC7C,EAEY,SAATd,EACO,SAAAa,GACP,OAAO,kBAAIA,GAAX,cAAuBb,EAAOY,EAAMG,eACvC,EAGU,SAAAF,GACP,OAAO,kBAAIA,GAAX,cAAuBb,EAAOY,GACjC,EAER,GACC,CAACJ,IAGH,OACI,gBAAKlB,UAAW0B,EAAAA,UAAhB,UACI,kBAAM1B,UAAW0B,EAAAA,aAAmBC,SA1C3B,SAAAC,GACbA,EAAMC,iBACN,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASvB,GACzBqB,EAASE,OAAO,QAASxB,GACzBsB,EAASE,OAAO,OAAQtB,GACxB,IAAMuB,EAAOH,EACPI,EAAQ,mCAAG,uFAAQrB,EAAR,EAAQA,MAAOoB,EAAf,EAAeA,KAC5B,IACAtB,GAASwB,EAAAA,EAAAA,GAAY,CAACtB,MAAAA,EAAOoB,KAAAA,IAI5B,CAFD,MAAOG,GACLC,QAAQC,IAAIF,EACb,CANY,2CAAH,sDAQdF,EAAS,CAACrB,MAAAA,EAAOoB,KAAAA,IACjBf,EAAWX,EACd,EAyBO,WACI,2BACKE,GACA,gBACG8B,IAAKC,IAAIC,gBAAgBhC,GACzBiC,IAAI,eACJ1C,UAAW0B,EAAAA,mBAGd,gBACGa,IAAKI,EACLD,IAAI,iBACJ1C,UAAW0B,EAAAA,mBAEf,cAAG1B,UAAW0B,EAAAA,cAAd,SAAkC,uGAC9B,kBACIkB,KAAK,OACLlC,KAAK,QACLmC,UAAQ,EACRC,OAAO,wBACPC,SAAU5B,QAGtB,4BACI,mBAAOnB,UAAW0B,EAAAA,YAAlB,UAAoC,yFAChC,kBACI1B,UAAW0B,EAAAA,MACXhB,KAAK,QACLsC,YAAY,mIACZH,UAAQ,EACRvB,MAAOd,EACPuC,SAAU5B,QAGlB,mBAAOnB,UAAW0B,EAAAA,YAAlB,UAAoC,2LAChC,kBACI1B,UAAW0B,EAAAA,MACXhB,KAAK,OACLsC,YAAY,qOACZH,UAAQ,EACRvB,MAAOZ,EACPqC,SAAU5B,WAItB,mBAAQyB,KAAK,SAAb,SAAsB,oGAInC,E,oBC7GH,EAA4B,mCAA5B,EAAuE,+BCevE,EAVmB,WACf,IAAMK,GAAUnC,EAAAA,EAAAA,IAAYoC,EAAAA,GAC5B,OACI,iBAAKlD,UAAW0B,EAAhB,WACI,eAAI1B,UAAW0B,EAAf,SAA2B,gGAC1BuB,GAAW,SAACE,EAAA,EAAD,KAAc,SAAC,EAAD,MAGrC,C,uDCdM,IAAMD,EAAY,SAAC,GAAD,SAAGjC,QAAsBgC,OAAzB,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/AddCategoryForm/AddCategoryForm.module.scss?877a","components/AddCategoryForm/AddCategoryForm.jsx","webpack://react-homework-template/./src/pages/AddCategoryPage/AddCategoryPage.module.scss?a7a1","pages/AddCategoryPage/AddCategoryPage.jsx","redux/product/product-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"orange\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddCategoryForm_container__E4GSx\",\"product_form\":\"AddCategoryForm_product_form__fnFvE\",\"label_input\":\"AddCategoryForm_label_input__6DX9j\",\"product_picture\":\"AddCategoryForm_product_picture__Y87uL\",\"title_picture\":\"AddCategoryForm_title_picture__fOxGX\"};","import scss from './AddCategoryForm.module.scss';\nimport { useState, useCallback} from 'react';\nimport defaultPicture from '../../images/images.png';\nimport { addCategory } from 'redux/category/category-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userToken } from 'redux/auth/auth-selectors';\n\nconst initialState = {\n    title: \"\",\n    photo: \"\",\n    name: \"\",\n  };\n\nconst AddCategoryForm = () => {\n    const dispatch = useDispatch();\n    const token = useSelector(userToken);\n    const [product, setProduct] = useState({...initialState});\n    const { title, photo, name} = product;\n    \n    const onSubmit = event => {\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append(\"photo\", photo);\n        formData.append(\"title\", title);\n        formData.append(\"name\", name);\n        const data = formData;\n        const sendData = async ({token, data}) => {\n            try {\n            dispatch(addCategory({token, data}));\n            } \n            catch (error) {\n              console.log(error)\n            }\n          };\n        sendData({token, data});\n        setProduct(initialState);\n    };\n\n    const handleChangeDetails = useCallback(({ target }) => {\n        const {name, value } = target;\n        if(name === \"photo\"){\n            setProduct(prevState => {\n                return {...prevState, photo: target.files[0]} \n            });\n        }\n        else if(name === \"name\"){\n            setProduct(prevState => {\n                return {...prevState, [name]: value.toLowerCase()};\n            });\n        }\n        else {\n            setProduct(prevState => {\n                return {...prevState, [name]: value};\n            });\n        }\n    },\n      [setProduct]\n    );\n\n    return (\n        <div className={scss.container}>\n            <form className={scss.product_form} onSubmit={onSubmit}>\n                <div>\n                    {photo ? \n                    (<img \n                        src={URL.createObjectURL(photo)} \n                        alt=\"productPhoto\" \n                        className={scss.product_picture}\n                        />)\n                    :\n                    (<img \n                        src={defaultPicture} \n                        alt=\"defaultPicture\"\n                        className={scss.product_picture}\n                        />)}                      \n                    <p className={scss.title_picture}>Фотографія товару</p>\n                        <input\n                            type='file'\n                            name=\"photo\"\n                            required\n                            accept=\"image/png, image/jpeg\"\n                            onChange={handleChangeDetails}\n                        />\n                </div> \n                <div> \n                    <label className={scss.label_input}>Назва категорії\n                        <input\n                            className={scss.input}\n                            name='title'\n                            placeholder='Введіть назву категорії'\n                            required\n                            value={title}\n                            onChange={handleChangeDetails}\n                        />\n                    </label>\n                    <label className={scss.label_input}>Назва категорії англійською мовою\n                        <input\n                            className={scss.input}\n                            name='name'\n                            placeholder='Введіть назву категорії англійською мовою'\n                            required\n                            value={name}\n                            onChange={handleChangeDetails}\n                        />\n                    </label>\n                </div>\n                <button type='submit'>Додати категорію</button>\n            </form>\n        </div>\n    );\n  };\n  \nexport default AddCategoryForm;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddCategoryPage_container__Spa+x\",\"title\":\"AddCategoryPage_title__w8T1o\"};","import AddCategoryForm from \"components/AddCategoryForm/AddCategoryForm\";\nimport { isLoading } from '../../redux/product/product-selectors';\nimport Loader  from '../../components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport scss from './AddCategoryPage.module.scss';\n\nconst AddProduct = () => {\n    const loading = useSelector(isLoading);\n    return (\n        <div className={scss.container}>\n            <h1 className={scss.title}>Додати категорію</h1>\n            {loading ? (<Loader/>) : (<AddCategoryForm/>)}\n        </div>\n    );\n};\n  \nexport default AddProduct;","export const isLoading = ({ product }) => product.loading;"],"names":["className","css","strokeColor","strokeWidth","animationDuration","width","visible","initialState","title","photo","name","dispatch","useDispatch","token","useSelector","userToken","useState","product","setProduct","handleChangeDetails","useCallback","target","value","prevState","files","toLowerCase","scss","onSubmit","event","preventDefault","formData","FormData","append","data","sendData","addCategory","error","console","log","src","URL","createObjectURL","alt","defaultPicture","type","required","accept","onChange","placeholder","loading","isLoading","Loader"],"sourceRoot":""}