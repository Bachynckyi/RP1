{"version":3,"file":"static/js/174.eafe4dad.chunk.js","mappings":"qLACA,EAAyB,uB,UCgBzB,EAde,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,SACZC,YAAY,IACZC,kBAAkB,MAClBC,MAAM,KACNC,SAAS,KAIhB,C,mICdD,GAAgB,UAAY,kCAAkC,aAAe,qCAAqC,YAAc,oCAAoC,gBAAkB,wCAAwC,cAAgB,uC,0DCA/N,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,CACT,CDVe,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CAEA,OAAOE,CACT,C,cEKA,EAtBuB,SAAC,GAA2B,IAA1BW,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aAO5B,OACI,2BACI,kBACIC,KAAK,QACLC,GAAIH,EACJI,KAAK,WACLC,MAAOL,EACPM,SAZS,SAAC,GAAc,IACxBD,EADuB,EAAZhB,OACXgB,MACRJ,EAAaI,EAChB,EAUWE,UAAQ,KAEZ,kBAAOC,QAASR,EAAhB,SAAwBA,MAGjC,E,UCCH,EApBuB,SAAC,GAAmC,IAAjCS,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAE5BT,EAAe,SAACU,GAClBD,EAAcC,EACjB,EAEKC,EAAWH,EAAWI,KAAI,YAAwB,IAArBC,EAAoB,EAApBA,IAAQC,EAAY,OAC/C,OACI,SAAC,GAAD,kBAA8BA,GAA9B,IAAqCD,IAAKA,EAAKb,aAAcA,IAAxCa,EAEhC,IAED,OACI,4BACI,wBAAI,sIACJ,wBAAKF,MAGhB,ECpBYI,EAAY,SAAC,GAAD,SAAGC,SAAwBC,OAA3B,E,UCYnBC,EAAe,CACjBnB,MAAO,GACPoB,YAAa,GACbH,SAAU,GACVI,MAAO,GACPnB,KAAM,GACNoB,MAAO,GACPC,MAAO,IA2JX,EAxJuB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,GAA8BC,EAAAA,EAAAA,WAAS,UAAIV,IAA3C,eAAOW,EAAP,KAAgBC,EAAhB,KACQ/B,EAA2D8B,EAA3D9B,MAAOoB,EAAoDU,EAApDV,YAAaC,EAAuCS,EAAvCT,MAAOC,EAAgCQ,EAAhCR,MAAOpB,EAAyB4B,EAAzB5B,KAAMqB,EAAmBO,EAAnBP,MAAON,EAAYa,EAAZb,SACvD,GAAoCY,EAAAA,EAAAA,UAAS,MAA7C,eAAOpB,EAAP,KAAmBuB,EAAnB,KACMd,GAAUS,EAAAA,EAAAA,IAAYX,IAE5BiB,EAAAA,EAAAA,YAAU,WACN,IACIT,GAASU,EAAAA,EAAAA,GAAiBR,IACzBS,MAAK,SAAAC,GAAQ,OAAIJ,EAAcI,EAASC,QAAQC,KAAnC,GAIjB,CAFD,MAAMC,GACFC,QAAQC,IAAIF,EACf,CACJ,GAAE,CAACf,EAAUE,IAEd,IAwBMgB,GAAsBC,EAAAA,EAAAA,cAAY,YAAiB,IAAdtD,EAAa,EAAbA,OAChCe,EAAgBf,EAAhBe,KAAMC,EAAUhB,EAAVgB,MAET0B,EADQ,UAAT3B,EACY,SAAAwC,GACP,yBAAUA,GAAV,IAAqBrB,MAAOlC,EAAOwD,MAAM,IAAI,EAGtC,SAAAD,GACP,OAAO,kBAAIA,GAAX,cAAuBxC,EAAOC,GACjC,EAER,GAAC,CAAC0B,IASH,OACI,8BACKb,GAAW,SAAC4B,EAAA,EAAD,KACZ,gBAAKrE,UAAWsE,EAAAA,UAAhB,UACI,kBAAMtE,UAAWsE,EAAAA,aAAmBC,SAhD/B,SAAAC,GACbA,EAAMC,iBACNV,QAAQC,IAAIX,GACZ,IAAMqB,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAS9B,GACzB4B,EAASE,OAAO,QAASrD,GACzBmD,EAASE,OAAO,OAAQnD,GACxBiD,EAASE,OAAO,QAAS/B,GACzB6B,EAASE,OAAO,QAAShC,GACzB8B,EAASE,OAAO,cAAejC,GAC/B+B,EAASE,OAAO,WAAYpC,GAC5B,IAAMqB,EAAOa,EACPG,EAAQ,mCAAG,uFAAQ5B,EAAR,EAAQA,MAAOY,EAAf,EAAeA,KAC5B,IACAd,GAAS+B,EAAAA,EAAAA,GAAW,CAAC7B,MAAAA,EAAOY,KAAAA,IAI3B,CAFD,MAAOC,GACLC,QAAQC,IAAIF,EACb,CANY,2CAAH,sDAQde,EAAS,CAAC5B,MAAAA,EAAOY,KAAAA,IACjBP,EAAWZ,EACd,EA0BW,WACI,2BACKI,GACA,gBACGiC,IAAKC,IAAIC,gBAAgBnC,GACzBoC,IAAI,eACJlF,UAAWsE,EAAAA,mBAGd,gBACGS,IAAKI,EACLD,IAAI,iBACJlF,UAAWsE,EAAAA,mBAEf,cAAGtE,UAAWsE,EAAAA,cAAd,SAAkC,uGAC9B,kBACI7C,KAAK,OACLE,KAAK,QACLG,UAAQ,EACRsD,OAAO,wBACPvD,SAAUoC,QAGtB,4BACI,mBAAOjE,UAAWsE,EAAAA,YAAlB,UAAoC,uEAChC,kBACItE,UAAWsE,EAAAA,MACX3C,KAAK,QACL0D,YAAY,iHACZvD,UAAQ,EACRF,MAAOL,EACPM,SAAUoC,QAGlB,6BAAO,4BACH,qBACIjE,UAAWsE,EAAAA,YACX3C,KAAK,cACL0D,YAAY,sEACZC,KAAK,KACLC,KAAK,KACLzD,UAAQ,EACRF,MAAOe,EACPd,SAAUoC,QAGlB,mBAAOjE,UAAWsE,EAAAA,YAAlB,UAAoC,8CAChC,kBACItE,UAAWsE,EAAAA,MACX3C,KAAK,OACL0D,YAAY,wFACZvD,UAAQ,EACRF,MAAOH,EACPI,SAAUoC,QAGlB,mBAAOjE,UAAWsE,EAAAA,YAAlB,UAAoC,kCAChC,kBACItE,UAAWsE,EAAAA,MACX3C,KAAK,QACL0D,YAAY,4EACZvD,UAAQ,EACRF,MAAOiB,EACPhB,SAAUoC,QAGlB,mBAAOjE,UAAWsE,EAAAA,YAAlB,UAAoC,4BAChC,kBACItE,UAAWsE,EAAAA,MACX3C,KAAK,QACL0D,YAAY,sEACZvD,UAAQ,EACRF,MAAOgB,EACPf,SAAUoC,UAIN,OAAfjC,IAAwB,SAAC,EAAD,CAAgBA,WAAYA,EAAYC,cAxF3D,SAACC,GACnB6B,QAAQC,IAAI9B,GACZoB,GAAW,SAAAa,GACP,OAAO,kBAAIA,GAAX,IAAsB3B,SAAUN,GACnC,GACJ,KAoFe,mBAAQT,KAAK,SAAb,SAAsB,8EAMvC,E,UC3KH,EAA4B,kCAA5B,EAAsE,8BCetE,EAVmB,WACf,IAAMgB,GAAUS,EAAAA,EAAAA,IAAYX,EAAAA,GAC5B,OACI,iBAAKvC,UAAWsE,EAAhB,WACI,eAAItE,UAAWsE,EAAf,SAA2B,wEAC1B7B,GAAW,SAAC4B,EAAA,EAAD,KAAc,SAAC,EAAD,MAGrC,C,uDCdM,IAAM9B,EAAY,SAAC,GAAD,SAAGc,QAAsBZ,OAAzB,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/AddProductForm/AddProductForm.module.scss?8576","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/AddProductForm/CategoriesItem/CategoriesItem.jsx","components/AddProductForm/CategoriesList/CategoriesList.jsx","redux/category/category-selectors.js","components/AddProductForm/AddProductForm.jsx","webpack://react-homework-template/./src/pages/AddProductPage/AddProductPage.module.scss?3fc9","pages/AddProductPage/AddProductPage.jsx","redux/product/product-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"orange\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddProductForm_container__ZMqFD\",\"product_form\":\"AddProductForm_product_form__Mo-TC\",\"label_input\":\"AddProductForm_label_input__Z0CRD\",\"product_picture\":\"AddProductForm_product_picture__q+XIz\",\"title_picture\":\"AddProductForm_title_picture__Mwg4G\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","\nconst CategoriesItem = ({title, pickCategory}) => {\n\n    const handlePicker = ({target}) => {\n        const { value } = target;\n        pickCategory(value);\n    };\n\n    return (\n        <li>\n            <input \n                type=\"radio\" \n                id={title} \n                name=\"category\" \n                value={title} \n                onChange={handlePicker}\n                required\n            />\n            <label htmlFor={title}>{title}</label>\n        </li>\n    );\n  };\n  \nexport default CategoriesItem;\n\n\n","import CategoriesItem from '../CategoriesItem/CategoriesItem';\n\nconst CategoriesList = ({ categories, fetchCategory }) => {\n\n    const pickCategory = (pickedCategory) => {\n        fetchCategory(pickedCategory);\n    };\n\n    const elements = categories.map(({ _id, ...props }) => {\n            return (\n                <CategoriesItem key={_id} {...props} _id={_id} pickCategory={pickCategory}/>\n            );\n    });\n    \n    return (\n        <div>\n            <h3>Обрати категорію товару</h3>\n            <ol>{elements}</ol>\n        </div>\n    );\n};\n\nexport default CategoriesList;","export const isLoading = ({ category }) => category.loading;","import scss from './AddProductForm.module.scss';\nimport { useState, useCallback, useEffect } from 'react';\nimport defaultPicture from '../../images/images.png';\nimport { getAllCategories } from '../../redux/category/category-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userToken } from 'redux/auth/auth-selectors';\nimport { addProduct } from '../../redux/product/product-operations';\nimport CategoriesList from './CategoriesList/CategoriesList';\nimport { isLoading } from '../../redux/category/category-selectors';\nimport Loader  from '../../components/Loader/Loader';\n\n\nconst initialState = {\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    price: \"\",\n    type: \"\",\n    color: \"\",\n    photo: \"\",\n  };\n\nconst AddProductForm = () => {\n    const dispatch = useDispatch();\n    const token = useSelector(userToken);\n    const [product, setProduct] = useState({...initialState});\n    const { title, description, price, color, type, photo, category} = product;\n    const [categories, setCategories] = useState(null);\n    const loading = useSelector(isLoading);\n\n    useEffect(() => {\n        try{\n            dispatch(getAllCategories(token))\n            .then(response => setCategories(response.payload.data))\n        }\n        catch(error){\n            console.log(error)\n        };\n    }, [dispatch, token])\n\n    const onSubmit = event => {\n        event.preventDefault();\n        console.log(product)\n        const formData = new FormData();\n        formData.append(\"photo\", photo);\n        formData.append(\"title\", title);\n        formData.append(\"type\", type);\n        formData.append(\"color\", color);\n        formData.append(\"price\", price);\n        formData.append(\"description\", description);\n        formData.append(\"category\", category);\n        const data = formData;\n        const sendData = async ({token, data}) => {\n            try {\n            dispatch(addProduct({token, data}));\n            } \n            catch (error) {\n              console.log(error)\n            }\n          };\n        sendData({token, data});\n        setProduct(initialState);\n    };\n\n    const handleChangeDetails = useCallback(({ target }) => {\n        const {name, value } = target;\n        if(name === \"photo\"){\n            setProduct(prevState => {\n                return{...prevState, photo: target.files[0]}}) \n        }\n        else {\n            setProduct(prevState => {\n                return {...prevState, [name]: value};\n            });\n        }\n    },[setProduct]);\n\n    const fetchCategory = (pickedCategory) => {\n        console.log(pickedCategory)\n        setProduct(prevState => {\n            return {...prevState, category: pickedCategory};\n        });\n    };\n\n    return (\n        <>\n            {loading ? (<Loader/>) : (\n            <div className={scss.container}>\n                <form className={scss.product_form} onSubmit={onSubmit}>\n                    <div>\n                        {photo ? \n                        (<img \n                            src={URL.createObjectURL(photo)} \n                            alt=\"productPhoto\" \n                            className={scss.product_picture}\n                            />)\n                        :\n                        (<img \n                            src={defaultPicture} \n                            alt=\"defaultPicture\"\n                            className={scss.product_picture}\n                            />)}                      \n                        <p className={scss.title_picture}>Фотографія товару</p>\n                            <input\n                                type='file'\n                                name=\"photo\"\n                                required\n                                accept=\"image/png, image/jpeg\"\n                                onChange={handleChangeDetails}\n                            />\n                    </div> \n                    <div> \n                        <label className={scss.label_input}>Назва товару\n                            <input\n                                className={scss.input}\n                                name='title'\n                                placeholder='Введіть назву товару'\n                                required\n                                value={title}\n                                onChange={handleChangeDetails}\n                            />\n                        </label>\n                        <label>Опис\n                            <textarea\n                                className={scss.label_input}\n                                name='description'\n                                placeholder='Введіть опис'\n                                rows=\"20\"\n                                cols=\"70\"\n                                required\n                                value={description}\n                                onChange={handleChangeDetails}\n                            />\n                        </label>\n                        <label className={scss.label_input}>Фасовка\n                            <input\n                                className={scss.input}\n                                name='type'\n                                placeholder='Введіть фасовку'\n                                required\n                                value={type}\n                                onChange={handleChangeDetails}\n                            />\n                        </label>\n                        <label className={scss.label_input}>Колір\n                            <input\n                                className={scss.input}\n                                name='color'\n                                placeholder='Введіть колір'\n                                required\n                                value={color}\n                                onChange={handleChangeDetails}\n                            />\n                        </label>\n                        <label className={scss.label_input}>Ціна\n                            <input\n                                className={scss.input}\n                                name='price'\n                                placeholder='Введіть ціну'\n                                required\n                                value={price}\n                                onChange={handleChangeDetails}\n                            />\n                        </label>\n                    </div>\n                    {categories !== null && (<CategoriesList categories={categories} fetchCategory={fetchCategory}/>)}\n                    <button type='submit'>Додати товар</button>\n                </form>\n            </div>\n            )}\n        </>\n    );\n  };\n  \nexport default AddProductForm;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddProductPage_container__IuA4V\",\"title\":\"AddProductPage_title__NkUw-\"};","import AddProductForm from \"components/AddProductForm/AddProductForm\";\nimport { isLoading } from '../../redux/product/product-selectors';\nimport Loader  from '../../components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport scss from './AddProductPage.module.scss';\n\nconst AddProduct = () => {\n    const loading = useSelector(isLoading);\n    return (\n        <div className={scss.container}>\n            <h1 className={scss.title}>Додати товар</h1>\n            {loading ? (<Loader/>) : (<AddProductForm/>)}\n        </div>\n    );\n};\n  \nexport default AddProduct;","export const isLoading = ({ product }) => product.loading;"],"names":["className","css","strokeColor","strokeWidth","animationDuration","width","visible","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","title","pickCategory","type","id","name","value","onChange","required","htmlFor","categories","fetchCategory","pickedCategory","elements","map","_id","props","isLoading","category","loading","initialState","description","price","color","photo","dispatch","useDispatch","token","useSelector","userToken","useState","product","setProduct","setCategories","useEffect","getAllCategories","then","response","payload","data","error","console","log","handleChangeDetails","useCallback","prevState","files","Loader","scss","onSubmit","event","preventDefault","formData","FormData","append","sendData","addProduct","src","URL","createObjectURL","alt","defaultPicture","accept","placeholder","rows","cols"],"sourceRoot":""}