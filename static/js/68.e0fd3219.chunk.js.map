{"version":3,"file":"static/js/68.e0fd3219.chunk.js","mappings":"4PACA,EAAuB,wBAAvB,EAAmD,qBAAnD,EAAkF,2BAAlF,EAAsJ,yBAAtJ,EAAmL,qBAAnL,EAAiN,0BAAjN,EAAgP,sB,oBCI1OA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAGCC,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACzB,GAA0BC,EAAAA,EAAAA,WAAS,UAAKL,IAAxC,eAAOM,EAAP,KAAcC,EAAd,KACQN,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SAQTM,GAAeC,EAAAA,EAAAA,cAAY,YAAiB,IAAdC,EAAa,EAAbA,OACxBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdL,GAAS,SAAAM,GACP,OAAO,kBAAKA,GAAZ,cAAwBF,EAAOC,GAChC,GACF,GACD,CAACL,IAIH,OACE,kBAAMO,UAAWC,EAAWX,SAjBT,SAAAY,GACnBA,EAAMC,iBACNb,GAAS,UAAKE,IACdC,EAASP,EACV,EAaC,WACE,eAAIc,UAAWC,EAAf,iFACA,iBAAKD,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXJ,KAAK,QACLC,MAAOX,EACPiB,UAAQ,EACRC,YAAY,oLACZC,SAAUZ,KAEZ,kBACEM,UAAWC,EACXJ,KAAK,WACLC,MAAOV,EACPgB,UAAQ,EACRC,YAAY,kFACZC,SAAUZ,QAGd,mBAAQM,UAAWC,EAAaM,KAAK,SAArC,UACE,cAAGP,UAAWC,EAAd,yCAGF,SAAC,KAAD,CAASD,UAAWC,EAAQO,GAAG,YAA/B,mKAKL,E,wCC3BD,EA3BkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAkB/B,OACE,+BACkB,IAAfF,GAAuB,SAAC,KAAD,CAAUH,GAAG,OAAU,SAACnB,EAAD,CAAWC,SAlBzC,SAAAwB,GACnB,IACMC,EAAW,CAAE5B,MADS2B,EAApB3B,MACkBC,SADE0B,EAAb1B,UAGT4B,EAAQ,mCAAG,WAAOD,GAAP,iEACf,IACEN,GAASQ,EAAAA,EAAAA,GAAOF,GAGjB,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EACb,CALc,2CAAH,sDAQd,GADAF,EAASD,IACS,IAAfJ,EACD,OAAO,SAAC,KAAD,CAAUH,GAAG,KAEvB,KAMF,C,wDC/BM,IAAMK,EAAU,SAAC,GAAD,SAAGQ,KAAgBR,OAAnB,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","redux/auth/auth-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__Kx5pU\",\"h\":\"LoginForm_h__gHnjE\",\"wrapper\":\"LoginForm_wrapper__v90fz\",\"label\":\"LoginForm_label__RGIMj\",\"input\":\"LoginForm_input__7Ngg7\",\"p\":\"LoginForm_p__laNcq\",\"button\":\"LoginForm_button__ph0FE\",\"pp\":\"LoginForm_pp__MgGpt\"};","\nimport { NavLink } from 'react-router-dom';\nimport scss from './LoginForm.module.scss';\nimport { useState, useCallback } from 'react';\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nexport const LoginForm = ({onSubmit}) => {\n  const [state, setState] = useState({ ...initialState });\n  const { email, password } = state;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState(initialState)\n  };\n\n  const handleChange = useCallback(({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n\n  return (\n    <form className={scss.form} onSubmit={handleSubmit}>\n      <h2 className={scss.h}>Авторизація</h2>\n      <div className={scss.wrapper}>\n        <input\n          className={scss.input}\n          name='email'\n          value={email}\n          required\n          placeholder='Введіть адресу електронної пошти'\n          onChange={handleChange}\n        />\n        <input\n          className={scss.input}\n          name='password'\n          value={password}\n          required\n          placeholder='Введіть пароль'\n          onChange={handleChange}\n        />\n      </div>\n      <button className={scss.button} type=\"submit\">\n        <p className={scss.pp}>Вхід</p>\n      </button>\n\n      <NavLink className={scss.p} to=\"/register\">\n        Немає аккаунта? Регістрація\n      </NavLink>\n    </form>\n  );\n};\n\nexport default LoginForm;","import { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { signIn } from '../../redux/auth/auth-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLogin } from 'redux/auth/auth-selectors';\nimport { Navigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const userStatus = useSelector(isLogin);\n\n  const handleSignIn = data => {\n    const { email, password } = data;\n    const dataSend = { email, password };\n\n    const sendData = async (dataSend) => {\n      try {\n        dispatch(signIn(dataSend));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    sendData(dataSend);\n    if(userStatus === true) {\n      return <Navigate to=\"/\"/>;\n    }\n  };\n  return (\n    <>\n      {userStatus === true ? (<Navigate to=\"/\"/>) : (<LoginForm onSubmit={handleSignIn}/>)}\n    </>\n  );\n};\n\nexport default LoginPage;","export const isLogin = ({ auth }) => auth.isLogin;\nexport const user = ({ auth }) => auth.token;\nexport const isLoading = ({ auth }) => auth.loading;"],"names":["initialState","email","password","LoginForm","onSubmit","useState","state","setState","handleChange","useCallback","target","name","value","prevState","className","scss","event","preventDefault","required","placeholder","onChange","type","to","dispatch","useDispatch","userStatus","useSelector","isLogin","data","dataSend","sendData","signIn","error","console","log","auth"],"sourceRoot":""}