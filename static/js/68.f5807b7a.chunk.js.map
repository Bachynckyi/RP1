{"version":3,"file":"static/js/68.f5807b7a.chunk.js","mappings":"sKACA,MAA4B,0B,UCQ5B,EAPe,WACb,OACM,gBAAKA,UAAWC,GAGvB,C,qECND,EAAyB,uB,UCgBzB,EAde,WACb,OACE,gBAAKD,UAAWE,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,SACZC,YAAY,IACZC,kBAAkB,MAClBC,MAAM,KACNC,SAAS,KAIhB,C,6ICdD,EAAuB,wBAAvB,EAAmD,qBAAnD,EAAkF,2BAAlF,EAAsJ,yBAAtJ,EAAmL,qBAAnL,EAAiN,0BAAjN,EAAgP,sB,oBCI1OC,EAAe,CACnBC,MAAO,GACPC,SAAU,IAGCC,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACzB,GAA0BC,EAAAA,EAAAA,WAAS,UAAKL,IAAxC,eAAOM,EAAP,KAAcC,EAAd,KACQN,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SAQTM,GAAeC,EAAAA,EAAAA,cAAY,YAAiB,IAAdC,EAAa,EAAbA,OACxBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdL,GAAS,SAAAM,GACP,OAAO,kBAAKA,GAAZ,cAAwBF,EAAOC,GAChC,GACF,GACD,CAACL,IAIH,OACE,kBAAMf,UAAWC,EAAWW,SAjBT,SAAAU,GACnBA,EAAMC,iBACNX,GAAS,UAAKE,IACdC,EAASP,EACV,EAaC,WACE,eAAIR,UAAWC,EAAf,SAAuB,wEACvB,iBAAKD,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXkB,KAAK,QACLC,MAAOX,EACPe,UAAQ,EACRC,YAAY,oLACZC,SAAUV,KAEZ,kBACEhB,UAAWC,EACXkB,KAAK,WACLC,MAAOV,EACPc,UAAQ,EACRC,YAAY,kFACZC,SAAUV,QAGd,mBAAQhB,UAAWC,EAAa0B,KAAK,SAArC,UACE,cAAG3B,UAAWC,EAAd,SAAuB,gCAGzB,SAAC,KAAD,CAASD,UAAWC,EAAQ2B,GAAG,YAA/B,SAA2C,oJAKhD,E,4DCtBD,EA9BkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IAkB5B,OACE,gCACGD,IAAY,SAACE,EAAA,EAAD,KACG,IAAfL,GAAuB,SAAC,KAAD,CAAUH,GAAG,OAAU,SAACjB,EAAD,CAAWC,SAnBzC,SAAAyB,GACnB,IACMC,EAAW,CAAE7B,MADS4B,EAApB5B,MACkBC,SADE2B,EAAb3B,UAGT6B,EAAQ,mCAAG,WAAOD,GAAP,iEACf,IACET,GAASW,EAAAA,EAAAA,IAAOF,GAEjB,CADC,MAAOG,GACR,CAJc,2CAAH,sDAOd,GADAF,EAASD,IACS,IAAfP,EACD,OAAO,SAAC,KAAD,CAAUH,GAAG,KAEvB,KAMG,SAACc,EAAA,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/Footer/Footer.module.scss?d4c2","components/Footer/Footer.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Footer_container__iICw7\"};","import scss from './Footer.module.scss';\n\nconst Footer = () => {\n  return (\n        <div className={scss.container}>\n        </div>\n  );\n};\n\nexport default Footer;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <RotatingLines\n        strokeColor=\"orange\"\n        strokeWidth=\"5\"\n        animationDuration=\"1.5\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__Kx5pU\",\"h\":\"LoginForm_h__gHnjE\",\"wrapper\":\"LoginForm_wrapper__v90fz\",\"label\":\"LoginForm_label__RGIMj\",\"input\":\"LoginForm_input__7Ngg7\",\"p\":\"LoginForm_p__laNcq\",\"button\":\"LoginForm_button__ph0FE\",\"pp\":\"LoginForm_pp__MgGpt\"};","\nimport { NavLink } from 'react-router-dom';\nimport scss from './LoginForm.module.scss';\nimport { useState, useCallback } from 'react';\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nexport const LoginForm = ({onSubmit}) => {\n  const [state, setState] = useState({ ...initialState });\n  const { email, password } = state;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState(initialState)\n  };\n\n  const handleChange = useCallback(({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n\n  return (\n    <form className={scss.form} onSubmit={handleSubmit}>\n      <h2 className={scss.h}>Авторизація</h2>\n      <div className={scss.wrapper}>\n        <input\n          className={scss.input}\n          name='email'\n          value={email}\n          required\n          placeholder='Введіть адресу електронної пошти'\n          onChange={handleChange}\n        />\n        <input\n          className={scss.input}\n          name='password'\n          value={password}\n          required\n          placeholder='Введіть пароль'\n          onChange={handleChange}\n        />\n      </div>\n      <button className={scss.button} type=\"submit\">\n        <p className={scss.pp}>Вхід</p>\n      </button>\n\n      <NavLink className={scss.p} to=\"/register\">\n        Немає аккаунта? Реєстрація\n      </NavLink>\n    </form>\n  );\n};\n\nexport default LoginForm;","import { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { signIn } from '../../redux/auth/auth-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLogin, isLoading } from 'redux/auth/auth-selectors';\nimport { Navigate } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport Footer from 'components/Footer/Footer';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const userStatus = useSelector(isLogin);\n  const loading = useSelector(isLoading);\n\n  const handleSignIn = data => {\n    const { email, password } = data;\n    const dataSend = { email, password };\n\n    const sendData = async (dataSend) => {\n      try {\n        dispatch(signIn(dataSend));\n      } catch (error) {\n      }\n    };\n    sendData(dataSend);\n    if(userStatus === true) {\n      return <Navigate to=\"/\"/>;\n    }\n  };\n  \n  return (\n    <>\n      {loading && (<Loader/>)}\n      {userStatus === true ? (<Navigate to=\"/\"/>) : (<LoginForm onSubmit={handleSignIn}/>)}\n      <Footer/>\n    </>\n  );\n};\n\nexport default LoginPage;"],"names":["className","scss","css","strokeColor","strokeWidth","animationDuration","width","visible","initialState","email","password","LoginForm","onSubmit","useState","state","setState","handleChange","useCallback","target","name","value","prevState","event","preventDefault","required","placeholder","onChange","type","to","dispatch","useDispatch","userStatus","useSelector","isLogin","loading","isLoading","Loader","data","dataSend","sendData","signIn","error","Footer"],"sourceRoot":""}